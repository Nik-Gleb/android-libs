/*
 * build.gradle
 * logger
 *
 * Copyright (C) 2017, Gleb Nikitenko. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.library'


/*================== DECLARATIONS =====================*/

final int SDK_VER = Integer.parseInt(sdkVer)

/*=====================================================*/

android {
  compileSdkVersion SDK_VER
  buildToolsVersion buildToolsVer

  signingConfigs {
    releaseConfig {
      storeFile file(keyStoreFile)
      storePassword keyStorePass
      keyAlias sigKeyAlias
      keyPassword sigKeyPassword
    }
  }

  //noinspection GroovyMissingReturnStatement
  defaultConfig {
    final String verName = project.findProperty('VERSION_NAME')
    final boolean hasName = verName != null && !verName.isEmpty()

    versionName = hasName ? verName : '0.0.1'
    versionNameSuffix = hasName ? "" : "-SNAPSHOT"

    minSdkVersion minSdk; targetSdkVersion SDK_VER
    dexOptions { javaMaxHeapSize jvmHeapSize }
    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
      incremental true
    }
    consumerProguardFiles 'proguard-rules.pro'
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    debug {
      debuggable true; useProguard false
      shrinkResources false; minifyEnabled false
      manifestPlaceholders = [exported: false]
    }
    release {
      debuggable false; useProguard true
      // for alpha workaround
      shrinkResources false; minifyEnabled true
      manifestPlaceholders = [exported: true]
      proguardFile 'proguard-rules.pro'
      signingConfig signingConfigs.releaseConfig
    }
  }

  //testBuildType "release"
}

apply plugin: 'maven-publish'
publishing {
  publications {

    final String verName = project.findProperty('VERSION_NAME')
    final boolean hasName = verName != null && !verName.isEmpty()

    maven(MavenPublication) {
      groupId glebLibs; artifactId 'loaders'
      //noinspection GroovyAssignabilityCheck
      version hasName ? verName : 'SNAPSHOT'
      artifact "$buildDir/outputs/aar/${archivesBaseName}-release.aar"
    }
  }

  repositories { maven { url myMavenRepoWriteUrl } }
}

dependencies {

  /* Proguard rules */
    implementation 'com.infstory:proguard-annotations:1.0.2'
    /* Support annotations. */
    implementation 'com.android.support:support-annotations:' + supportVersion
    implementation 'com.android.support:support-core-utils:'   + supportVersion
    implementation 'com.android.support:support-fragment:'     + supportVersion

    /* JUnit */
    testImplementation 'junit:junit:' + junitVersion
    /* Android JUnit Runner */
    androidTestImplementation 'com.android.support.test:runner:' + runnerVersion
}
apply plugin: 'com.getkeepsafe.dexcount'