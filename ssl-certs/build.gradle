/*
 * build.gradle
 * ssl-certs
 *
 * Copyright (C) 2017, Gleb Nikitenko. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import proguard.gradle.ProGuardTask

apply plugin: 'java-library'

final MODULE = "ssl-certs"
final PACKAGE = glebLibs

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
assemble.dependsOn clean

task proguard(type: ProGuardTask) {
  injars "$buildDir/libs/${archivesBaseName}.jar"
  outjars "$buildDir/libs/${archivesBaseName}-release.jar"
  libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
  configuration 'proguard-rules.pro'
}
proguard.dependsOn assemble

apply plugin: 'maven-publish'
publishing {
  publications {
    maven(MavenPublication) {
      groupId PACKAGE; artifactId MODULE; version project.ext.mPubVer
      artifact "$buildDir/libs/${archivesBaseName}-release.jar"
    }
  }
  repositories { maven { url myMavenRepoWriteUrl } }
}
publish.dependsOn proguard
publish.doLast {
  final cachePath = PACKAGE + "/" + MODULE + "/" +  project.ext.mPubVer
  delete project.ext.mGradleCachePath + gradleCacheDescr + cachePath
  delete project.ext.mGradleCachePath + gradleCacheFiles + cachePath
}

task copyTestResources(type: Copy) {
  from "${projectDir}/src/test/resources"
  into "${buildDir}/classes/java/test"
}
processTestResources.dependsOn copyTestResources

repositories { jcenter(); google(); maven { url myMavenRepoReadUrl } }
dependencies {
  //implementation fileTree(dir: 'libs', include: ['*.jar'])

  /* JUnit */
  testImplementation 'junit:junit:' + junitVersion
  /* Optional -- Mockito framework */
  testImplementation 'org.mockito:mockito-core:2.8.47'
}