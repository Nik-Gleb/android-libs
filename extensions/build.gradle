/*
 * build.gradle
 * extensions
 * 	
 * Copyright (C) 2018, Gleb Nikitenko. All Rights Reserved.
 * 	
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import proguard.gradle.ProGuardTask

plugins {
  id 'java'
  id 'maven-publish'
}

final PACKAGE = glebLibs
final PACKAGE_NAME = "extensions"
final boolean HAS_MAVEN =
    project.ext.mMavenWrite != null &&
        !project.ext.mMavenWrite.isEmpty()

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

task obfuscate(type: ProGuardTask, dependsOn: 'assemble') {
  configuration 'proguard-rules.pro'
  libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
  libraryjars "${System.getProperty('java.home')}/lib/jce.jar"
  libraryjars "../.android.jar"
  libraryjars "libs/common-1.1.1.jar"
  libraryjars "libs/core-testing-1.1.1.jar"
  libraryjars "libs/lifecycle-common-1.1.1.jar"
  libraryjars "libs/livedata-1.1.1.jar"
  libraryjars "libs/livedata-core-1.1.1.jar"
  libraryjars "libs/runtime-1.1.1.jar"
  libraryjars "libs/android-support-v4.jar"
  injars "$buildDir/libs/${archivesBaseName}.jar"
  outjars "$buildDir/libs/${archivesBaseName}-release.jar"
}

jar.doLast {
  exec {
    commandLine "zip", "-d","$buildDir/libs/${archivesBaseName}.jar", "META-INF/*"
  }
}
publishing {
  publications {
    maven(MavenPublication) {
      groupId PACKAGE; artifactId PACKAGE_NAME; version project.ext.mPubVer
      artifact "$buildDir/libs/${archivesBaseName}-release.jar"
    }
  }
  repositories { maven { url mMavenWrite } }
}
model {
  tasks.generatePomFileForMavenPublication {setEnabled(HAS_MAVEN)}
  tasks.publishMavenPublicationToMavenRepository {setEnabled(HAS_MAVEN)}
}; tasks.publish.setEnabled(HAS_MAVEN)

task release() {}
release.dependsOn obfuscate

repositories { jcenter(); google(); maven { url myMavenRepoReadUrl } }
dependencies {
  test { useJUnitPlatform(); jvmArgs '-noverify' }
  compileOnly files('../.android.jar')
  //compileOnly fileTree(include: ['*.jar'], dir: 'libs')
  implementation files('libs/android-support-v4.jar')
  implementation files('libs/livedata-1.1.1.jar')
  implementation files('libs/livedata-core-1.1.1.jar')
  implementation files('libs/lifecycle-common-1.1.1.jar')
  //implementation files('libs/runtime-1.1.1.jar')
  //implementation files('libs/common-1.1.1.jar')
  implementation 'com.android.support:support-annotations:' + supportVersion
  implementation 'javax.inject:javax.inject:1'
  implementation 'com.google.dagger:dagger:2.16'
  annotationProcessor 'com.google.dagger:dagger-compiler:2.16'

  testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junitVersion
  testImplementation 'org.mockito:mockito-junit-jupiter:' + mockitoVersion
  testRuntime 'org.junit.jupiter:junit-jupiter-engine:' + junitVersion
}
