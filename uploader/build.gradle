/*
 * 	build.gradle
 * 	uploader
 *
 * 	Copyright (C) 2017, E-Toolkit ltd. All Rights Reserved.
 *
 * 	NOTICE:  All information contained herein is, and remains the
 * 	property of E-Toolkit limited and its SUPPLIERS, if any.
 *
 * 	The intellectual and technical concepts contained herein are
 * 	proprietary to E-Toolkit limited and its suppliers and
 * 	may be covered by United States and Foreign Patents, patents
 * 	in process, and are protected by trade secret or copyright law.
 *
 * 	Dissemination of this information or reproduction of this material
 * 	is strictly forbidden unless prior written permission is obtained
 * 	from E-Toolkit limited.
 */

apply plugin: 'com.android.library'


/*================== DECLARATIONS =====================*/

final int SDK_VER = Integer.parseInt(sdkVer)

/*=====================================================*/

android {
  compileSdkVersion SDK_VER
  buildToolsVersion buildToolsVer

  signingConfigs {
    releaseConfig {
      storeFile file(keyStoreFile)
      storePassword keyStorePass
      keyAlias sigKeyAlias
      keyPassword sigKeyPassword
    }
  }

  //noinspection GroovyMissingReturnStatement
  defaultConfig {
    final String verName = project.findProperty('VERSION_NAME')
    final boolean hasName = verName != null && !verName.isEmpty()

    versionName = hasName ? verName : '0.0.1'
    versionNameSuffix = hasName ? "" : "-SNAPSHOT"

    minSdkVersion 16; targetSdkVersion SDK_VER
    dexOptions { javaMaxHeapSize jvmHeapSize }
    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
      incremental true
    }
    consumerProguardFiles 'proguard-rules.pro'
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    debug {
      debuggable true; useProguard false
      shrinkResources false; minifyEnabled false
      manifestPlaceholders = [exported: false]
    }
    release {
      debuggable false; useProguard true
      // for alpha workaround
      shrinkResources false; minifyEnabled true
      manifestPlaceholders = [exported: true]
      proguardFile 'proguard-rules.pro'
      signingConfig signingConfigs.releaseConfig
    }
  }

  externalNativeBuild {
    cmake {
      path 'src/main/cpp/CMakeLists.txt'
    }
  }

  //testBuildType "release"
}

apply plugin: 'maven-publish'
publishing {
  publications {

    final String verName = project.findProperty('VERSION_NAME')
    final boolean hasName = verName != null && !verName.isEmpty()

    maven(MavenPublication) {
      groupId glebLibs
      artifactId 'uploader'
      //noinspection GroovyAssignabilityCheck
      version hasName ? verName : 'SNAPSHOT'
      artifact "$buildDir/outputs/aar/${archivesBaseName}-release.aar"
    }
  }

  repositories { maven { url myMavenRepoWriteUrl } }
}


dependencies {
  /* Ok Http. */
  implementation 'com.squareup.okhttp3:okhttp:3.8.0'

  /* JUnit. */
  testImplementation 'junit:junit:' + junitVersion
  //compile 'junit:junit:' + junitVersion

  /* JUnit runner. */
  androidTestImplementation 'com.android.support.test:runner:' + runnerVersion
  //compile 'com.android.support.test:runner:' + runnerVersion
}
apply plugin: 'com.getkeepsafe.dexcount'